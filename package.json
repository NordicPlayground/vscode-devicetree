{
    "name": "nrf-devicetree",
    "displayName": "DeviceTree for the Zephyr Project",
    "description": "Full DeviceTree language support for the Zephyr project",
    "publisher": "nordic-semiconductor",
    "author": {
        "name": "Nordic Semiconductor",
        "url": "https://www.nordicsemi.com/"
    },
    "version": "0.0.0",
    "repository": {
        "url": "https://github.com/NordicPlayground/vscode-nrf-devicetree",
        "type": "git"
    },
    "engines": {
        "vscode": "^1.43.0"
    },
    "license": "MIT",
    "categories": [
        "Programming Languages",
        "Linters"
    ],
    "activationEvents": [
        "onLanguage:dts",
        "onCommand:devicetree.newApp",
        "onCommand:devicetree.save"
    ],
    "icon": "doc/devicetree_icon.png",
    "main": "./dist/extension.js",
    "contributes": {
        "commands": [
            {
                "command": "devicetree.showOutput",
                "title": "DeviceTree: Show compiled output",
                "enablement": "editorLangId == dts && !editorReadonly || sideBarVisible",
                "icon": "$(open-preview)"
            },
            {
                "command": "devicetree.newApp",
                "title": "DeviceTree: New Application",
                "icon": "$(plus)"
            },
            {
                "command": "devicetree.ctx.addShield",
                "title": "DeviceTree: Add shield...",
                "enablement": "editorLangId == dts && !editorReadonly || sideBarVisible",
                "icon": {
                    "dark": "icons/dark/add-shield.svg",
                    "light": "icons/light/add-shield.svg"
                }
            },
            {
                "command": "devicetree.ctx.removeShield",
                "title": "DeviceTree: Remove shield",
                "enablement": "editorLangId == dts && !editorReadonly || sideBarVisible",
                "icon": {
                    "dark": "icons/dark/remove-shield.svg",
                    "light": "icons/light/remove-shield.svg"
                }
            },
            {
                "command": "devicetree.ctx.rename",
                "title": "DeviceTree: Rename context",
                "enablement": "editorLangId == dts && !editorReadonly || sideBarVisible",
                "icon": "$(edit)"
            },
            {
                "command": "devicetree.ctx.delete",
                "title": "DeviceTree: Delete this context",
                "icon": "$(trash)"
            },
            {
                "command": "devicetree.save",
                "title": "DeviceTree: Save configuration",
                "enablement": "devicetree:dirtyConfig",
                "icon": "$(save)"
            },
            {
                "command": "devicetree.ctx.setBoard",
                "title": "DeviceTree: Set board...",
                "enablement": "editorLangId == dts && !editorReadonly || sideBarVisible",
                "icon": "$(edit)"
            },
            {
                "command": "devicetree.getMacro",
                "title": "DeviceTree: Copy C identifier",
                "enablement": "editorLangId == dts",
                "icon": "$(clippy)"
            },
            {
                "command": "devicetree.edit",
                "title": "DeviceTree: Edit in overlay",
                "enablement": "editorLangId == dts && devicetree:ctx.hasOverlay",
                "icon": "$(edit)"
            }
        ],
        "languages": [
            {
                "id": "dts",
                "aliases": [
                    "DeviceTree"
                ],
                "configuration": "syntax/devicetree-language.json",
                "extensions": [
                    ".dts",
                    ".dtsi",
                    ".dts_compiled",
                    ".overlay",
                    ".dts.pre.tmp"
                ],
                "firstLine": "/dts-v1/;"
            }
        ],
        "grammars": [
            {
                "language": "dts",
                "scopeName": "source.dts",
                "path": "./syntax/dts.tmLanguage.json"
            }
        ],
        "menus": {
            "editor/title": [
                {
                    "command": "devicetree.ctx.addShield",
                    "when": "editorLangId == dts && !editorReadonly",
                    "group": "1_run"
                },
                {
                    "command": "devicetree.showOutput",
                    "when": "editorLangId == dts && !editorReadonly",
                    "group": "1_run"
                }
            ],
            "editor/context": [
                {
                    "command": "devicetree.getMacro",
                    "when": "editorLangId == dts",
                    "group": "9_cutcopypaste"
                },
                {
                    "command": "devicetree.edit",
                    "when": "editorLangId == dts",
                    "group": "1_modification"
                }
            ],
            "view/title": [
                {
                    "command": "devicetree.save",
                    "when": "view == trond-snekvik.devicetree.ctx && devicetree:dirtyConfig",
                    "group": "navigation"
                },
                {
                    "command": "devicetree.newApp",
                    "when": "view == trond-snekvik.devicetree.ctx",
                    "group": "navigation"
                }
            ],
            "view/item/context": [
                {
                    "command": "devicetree.ctx.addShield",
                    "when": "viewItem == devicetree.ctx",
                    "group": "inline"
                },
                {
                    "command": "devicetree.ctx.rename",
                    "when": "viewItem == devicetree.ctx"
                },
                {
                    "command": "devicetree.ctx.delete",
                    "when": "viewItem == devicetree.ctx"
                },
                {
                    "command": "devicetree.showOutput",
                    "when": "viewItem == devicetree.ctx",
                    "group": "inline"
                },
                {
                    "command": "devicetree.ctx.setBoard",
                    "when": "viewItem == devicetree.board",
                    "group": "inline"
                },
                {
                    "command": "devicetree.ctx.removeShield",
                    "when": "viewItem == devicetree.shield",
                    "group": "inline"
                }
            ]
        },
        "views": {
            "explorer": [
                {
                    "name": "DeviceTree",
                    "visibility": "collapsed",
                    "id": "trond-snekvik.devicetree.ctx",
                    "icon": "icons/dark/devicetree-inner.svg"
                }
            ]
        },
        "viewsWelcome": [
            {
                "view": "trond-snekvik.devicetree.ctx",
                "contents": "DeviceTree context view:\n\nWhen you open a DeviceTree file, it will show up here, along with information about its board and configuration."
            }
        ],
        "configuration": {
            "type": "object",
            "title": "DeviceTree",
            "properties": {
                "devicetree.modules": {
                    "type": "array",
                    "description": "List of directories containing binding descriptors. Relative paths are executed from each workspace. Defaults to dts/bindings",
                    "default": [
                        "${zephyrBase}",
                        "${zephyrBase}/../nrf",
                        "."
                    ],
                    "items": "string",
                    "scope": "machine"
                },
                "devicetree.zephyr": {
                    "type": "string",
                    "description": "Path to the Zephyr repo",
                    "scope": "machine"
                },
                "devicetree.ctxFile": {
                    "type": "string",
                    "description": "File to store contexts in",
                    "scope": "machine"
                },
                "devicetree.defaultBoard": {
                    "type": "string",
                    "description": "Default DeviceTree board when overlay file has a generic name"
                }
            }
        },
        "yamlValidation": [
            {
                "fileMatch": "dts/bindings/**/*.yaml",
                "url": "./syntax/bindings-schema.yaml"
            }
        ]
    },
    "scripts": {
        "vscode:prepublish": "webpack --mode production",
        "compile": "tsc -p ./",
        "watch": "tsc -watch -p ./",
        "test": "npm run compile && node ./node_modules/vscode/bin/test",
        "webpack": "webpack --mode development",
        "webpack-dev": "webpack --mode development --watch",
        "test-compile": "tsc -p ./",
        "lint": "node ./scripts/lint.js",
        "lintfix": "node ./scripts/lint.js --fix",
        "copyright": "ts-node ./scripts/copyright.ts",
        "updateBuildNumber": "node ./scripts/updateBuildNumber.js"
    },
    "devDependencies": {
        "@types/find": "^0.2.1",
        "@types/glob": "5.0.35",
        "@types/js-yaml": "3.11.1",
        "@types/mocha": "^5.2.6",
        "@types/node": "^6.0.40",
        "@types/vscode": "^1.43.0",
        "@typescript-eslint/eslint-plugin": "^3.9.1",
        "@typescript-eslint/parser": "^3.9.1",
        "eslint": "^7.7.0",
        "eslint-config-airbnb-base": "^14.2.0",
        "eslint-plugin-import": "^2.22.0",
        "globby": "^11.0.2",
        "mocha": "^6.1.4",
        "prettier": "^2.3.2",
        "ts-loader": "^8.0.0",
        "ts-node": "^10.2.1",
        "typescript": "^3.7.2",
        "vscode-test": "1.4.0",
        "webpack": "^5.36.1",
        "webpack-cli": "^3.3.12"
    },
    "dependencies": {
        "glob": "7.1.6",
        "js-yaml": "^3.13.1"
    }
}
